@inherits LayoutComponentBase
@using MudBlazorProject.Shared.ViewModels.Account;
@using Microsoft.AspNetCore.Components.Authorization;
@using MudBlazorProject.Shared.Services.Account
@using Microsoft.AspNetCore.Components;

@inject NavigationManager _navigate;
@* @inject CustomAuthenticationStateProvider _authentication;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage *@

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    @*     <AuthorizeView>
        <Authorized> *@
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" 
        Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"></MudIconButton>
        <MudSpacer />
        <MudStack>
            <div Class="d-flex justify-space-around flex-wrap mt-1">
                <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_customTheme" />
                <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                Icon="@Icons.Material.Filled.DarkMode"
                Color="@Color.Default"
                ToggledIcon="@Icons.Material.Filled.WbSunny"
                ToggledColor="@Color.Default" />
            </div>
        </MudStack>
        <MudStack Class="col-md-4">
            <div Class="d-flex justify-space-around flex-wrap mt-2">
                <MudStack Class="col-md-1">
                    <MudBadge Content="100" Color="Color.Primary" Overlap="true" Class="mx-4 my-2">
                        <MudIcon Icon="@Icons.Material.Filled.Email" Color="Color.Default" />
                    </MudBadge>
                </MudStack>
                <MudStack Class="col-md-3">
                    <MudNavLink onclick="(() => Logout())" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
                </MudStack>
            </div>
        </MudStack>
        @*    <NotAuthorized>
            <MudStack>
                <MudNavLink Href="/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            </MudStack>
            </NotAuthorized> *@
    </MudAppBar>
    @*      </Authorized>
    </AuthorizeView> *@
    @*     <AuthorizeView>
        <Authorized> *@
    <MudDrawer @bind-Open="@_drawerOpen" Width="60px" Elevation="20" Anchor="Anchor.Left">
      @*   <MudDrawerHeader>
            <MudText Typo="Typo.h4"></MudText>
        </MudDrawerHeader> *@
        <MudDrawerContainer>
            <NavMenu />
        </MudDrawerContainer>
    </MudDrawer>
    <MudMainContent>
        <div class="container" style="margin-left:10px">
            @Body
        </div>
    </MudMainContent>
    @*       </Authorized>
    </AuthorizeView> *@
</MudLayout>

@code{
    private bool _drawerOpen = true;
    private bool _isDarkMode;

    private UserViewModel _user;
    protected override Task OnInitializedAsync()
    {
        // httpClient.Res.Response.Headers.Append("blazor-enhanced-nav-redirect-location", redirectionUrl);
        // httpContext.Response.StatusCode = 200;
        // await sessionStorage.SetItemAsync("name", "John Smith");
        // var name = await sessionStorage.GetItemAsync<string>("name");
        // _user = new UserViewModel();
        // await base.OnInitializedAsync();

        // if (!_authentication.IsAuthentication())
        // {
        //     _navigate.NavigateTo("/login");
        // }
        return Task.CompletedTask;
    }
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private DrawerVariant _variant = DrawerVariant.Mini;

    private void ScreenResized(bool hidden)
    {
        if (hidden)
            _variant = DrawerVariant.Temporary;
        else
            _variant = DrawerVariant.Mini;
    }


    MudTheme _customTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.DeepPurple.Darken2,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.BlueGray.Darken3
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.DeepPurple.Darken4,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.BlueGray.Darken3
        }
    };

    public void Logout()
    {
        // ((CustomAuthenticationStateProvider)_authenticationStateProvider).Logout();
        _navigate.NavigateTo("/login");
    }
}

@* <div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>
 *@